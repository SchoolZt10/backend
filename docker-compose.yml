version: '3.8'
services:
  sc_backend:
    container_name: backend_school
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "6070:3000" 
    volumes:
      - .:/app
      - ./cdn:/app/cdn
    env_file:
      - .env
    command: npm run start:prod
    networks:
      - webnet
    depends_on:
      - mongo
    restart: always

  sc_nginx:
    container_name: nginx_school
    image: nginx:latest
    ports:
      - "6970:6970"
    expose:
      - 80
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/etc/ssl/cert.pem:/etc/ssl/cert.pem:ro
      - ./docker/nginx/etc/ssl/key.pem:/etc/ssl/key.pem:ro
      - ./docker/nginx/etc/ssl/cloudflare.crt:/etc/ssl/cloudflare.crt:ro
      - ./cdn:/srv
    networks:
      - webnet
    restart: always

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8085:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

volumes:
  mongo_data:

networks:
  webnet:
    driver: bridge
  internal:
    