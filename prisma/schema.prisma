generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @unique @default(autoincrement())
  name     String
  email    String   @unique
  password String
  role     Role     @default(STUDENT)
  profile  Profile?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Post      Post[]
  Comment   Comment[]
}

model Profile {
  id      Int     @id @unique @default(autoincrement())
  userId  Int     @unique
  user    User    @relation(fields: [userId], references: [id])
  bio     String?
  phone   String?
  address String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id   String @id @unique @default(uuid()) @map("id")
  name String @unique
  Post Post[]
}

model Post {
  id         String    @id @unique @default(uuid()) @map("id")
  slug       String    @unique
  title      String
  content    String
  image      String?
  createdAt  DateTime  @default(now())
  Comment    Comment[]
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  Category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?
}

model Comment {
  id        String   @id @unique @default(uuid()) @map("id")
  comment   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
  PARENT
}

enum Subject {
  MATH
  SCIENCE
  HISTORY
  LANGUAGE
  PHYSICAL_EDUCATION
}
